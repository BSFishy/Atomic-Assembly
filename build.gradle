
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "0.1"
group= "atomicassembly" 
archivesBaseName = "atomicassembly"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.10.2-12.18.1.2088"
    runDir = "run"
    useDepAts = true
    mappings = "snapshot_20160910"
}

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://maven.epoxide.xyz"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        url "http://maven.amadornes.com/"
    }
}

dependencies {
    //deobfCompile "mezz.jei:jei_1.10.2:3.9.+"
    //compile "net.darkhax.tesla:Tesla:1.10-1.2.+"
    //compile "net.industrial-craft:industrialcraft-2:2.6.67-ex110:api"
    //deobfCompile "MCMultiPart:MCMultiPart:1.2.1+:universal"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	inputs.property "modid", project.group

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'group':project.group
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		
		expand 'version':project.version, 'group':project.group
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

task apiJar(type: Jar, dependsOn: 'sourceMainJava') {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'atomicassembly/api/**/*'
    classifier 'api'
}

artifacts {
    archives deobfJar
    archives apiJar
    archives jar
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version + '-' + System.getenv('TRAVIS_BUILD_NUMBER')
            artifact deobfJar
            artifact apiJar
            artifact jar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'dev'
        name = 'Atomic-Assembly'
        version {
            name = project.version + '-' + System.getenv('TRAVIS_BUILD_NUMBER')
            released = new Date()
        }
    }
}

idea { module { inheritOutputDirs = true } }